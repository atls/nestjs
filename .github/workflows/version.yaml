name: Version

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  run:
    name: Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.13'

      - name: Install
        run: yarn install
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Version
        run: yarn workspaces changed foreach --no-private --verbose version patch --deferred
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Install jq
        run: sudo apt-get install -y jq
      
      - name: Check for version changes in @atls dependencies
        run: |
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD | grep 'package.json')
          for FILE in $CHANGED_FILES; do
            # Extract old and new version for @atls dependencies
            OLD_VERSIONS=$(git show HEAD~1:$FILE | jq '.dependencies | with_entries(select(.key | startswith("@atls/"))) | .[]' || echo "")
            NEW_VERSIONS=$(cat $FILE | jq '.dependencies | with_entries(select(.key | startswith("@atls/"))) | .[]')
            
            # Check if old and new versions are different
            if [[ "$OLD_VERSIONS" != "$NEW_VERSIONS" ]]; then
              echo "VERSION_CHANGED=true" >> $GITHUB_ENV
              break
            fi
          done

      - name: Generate Badges
        if: env.VERSION_CHANGED == 'true'
        run: yarn badges generate

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          author_name: Atls Github Bot
          author_email: github-bot@atls.team
          message: 'chore(common): versions'
          branch: master
