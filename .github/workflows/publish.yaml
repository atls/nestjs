name: Publish

on:
  workflow_dispatch:

jobs:
  run:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.13'

      - name: Install
        run: yarn install

      # - name: Npm Publish
      #   run: |
      #     yarn version apply --all
      #     yarn workspaces changed foreach --verbose --topological --no-private npm publish --access public
      #   env:
      #     YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Registry
        run: |
          echo "@torinasakura:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          yarn workspaces changed foreach --verbose --topological --no-private npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          author_name: Atls Github Bot
          author_email: github-bot@atls.team
          message: 'chore(common): publish'
          branch: master

      - uses: iamkubi/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Install jq
      #   run: sudo apt-get install -y jq

      # - name: Create GitHub Releases
      #   run: |
      #     for package_path in packages/*; do
      #       cd $package_path
      #       PACKAGE_NAME=$(node -p "require('./package.json').name")
      #       VERSION=$(node -p "require('./package.json').version")
      #       TAG_NAME="$PACKAGE_NAME-v$VERSION"
      #       git tag $TAG_NAME
      #       git push origin $TAG_NAME
      #       gh release create $TAG_NAME \
      #         --title "Release $TAG_NAME" \
      #         --notes "Release notes for $TAG_NAME"
      #       cd ../..
      #     done
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

